import java.util.Random;
import java.util.concurrent.TimeUnit;

import io.reactivex.Observable;

// import java.util.Observable;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static Observable<Integer> getNumbers()
    {
        return Observable
            .just(12,324,3,23,23,2343,11);
    }
    
    public static Observable<Integer> getNumbersWithRange(int start,int end)
    {
        return Observable
            .range(start, end);
    }
    public static Observable<Integer> getNumbersWithMap()
    {
        return Observable
            .range(0, 22)
            .map(x -> x*2 );
    }
    
    public static Observable<Integer> getNumbersWithFilter()
    {
        return Observable
            .range(12, 44)
            .map(x -> x*1)
            .filter(x -> x%2==0 );
    }

    public static Observable<Long> getObservableWithInterval()
    {
        return Observable
            .intervalRange(0, 20, 500, 1000, TimeUnit.MILLISECONDS);
    }

    public static Observable<Integer> getConcatMapOfNumbers()
    { 
        return Observable
            .just(2,3,5)
            .concatMap(
                no ->
                    Observable.range(0 , no)
            );
    }

    public static void main(String[] args) {
        
        getConcatMapOfNumbers()
        // getNumbersWithFilter()
        // getObservableWithInterval()
            .blockingSubscribe(no -> System.out.println(no + "\n"));
            // .subscribe(no -> System.out.println(no + "\n"))

        // Blocking Subscribe waits for the timeout to complete

    }
}
